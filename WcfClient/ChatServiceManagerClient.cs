//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChatAppServiceLibrary.DataContracts
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Client", Namespace="http://schemas.datacontract.org/2004/07/ChatAppServiceLibrary.DataContracts")]
    public partial class Client : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime CreatedOnField;
        
        private System.Guid IdField;
        
        private string NameField;
        
        private System.Nullable<System.Guid> TitleIdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn
        {
            get
            {
                return this.CreatedOnField;
            }
            set
            {
                this.CreatedOnField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> TitleId
        {
            get
            {
                return this.TitleIdField;
            }
            set
            {
                this.TitleIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/ChatAppServiceLibrary.DataContracts")]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ContentField;
        
        private System.Guid IdField;
        
        private System.Nullable<System.Guid> ReceiverIdField;
        
        private System.Guid SenderIdField;
        
        private System.DateTime TimeStampField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content
        {
            get
            {
                return this.ContentField;
            }
            set
            {
                this.ContentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ReceiverId
        {
            get
            {
                return this.ReceiverIdField;
            }
            set
            {
                this.ReceiverIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SenderId
        {
            get
            {
                return this.SenderIdField;
            }
            set
            {
                this.SenderIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp
        {
            get
            {
                return this.TimeStampField;
            }
            set
            {
                this.TimeStampField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IChatManagerService", CallbackContract=typeof(IChatManagerServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
public interface IChatManagerService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatManagerService/Login", ReplyAction="http://tempuri.org/IChatManagerService/LoginResponse")]
    bool Login(ChatAppServiceLibrary.DataContracts.Client client);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatManagerService/Login", ReplyAction="http://tempuri.org/IChatManagerService/LoginResponse")]
    System.Threading.Tasks.Task<bool> LoginAsync(ChatAppServiceLibrary.DataContracts.Client client);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManagerService/SendMessage")]
    void SendMessage(ChatAppServiceLibrary.DataContracts.Message message);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManagerService/SendMessage")]
    System.Threading.Tasks.Task SendMessageAsync(ChatAppServiceLibrary.DataContracts.Message message);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManagerService/Logout")]
    void Logout(string userName);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManagerService/Logout")]
    System.Threading.Tasks.Task LogoutAsync(string userName);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatManagerService/IsLoggedIn", ReplyAction="http://tempuri.org/IChatManagerService/IsLoggedInResponse")]
    bool IsLoggedIn(string userName);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatManagerService/IsLoggedIn", ReplyAction="http://tempuri.org/IChatManagerService/IsLoggedInResponse")]
    System.Threading.Tasks.Task<bool> IsLoggedInAsync(string userName);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IChatManagerServiceCallback
{
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManagerService/ReceiveMessage")]
    void ReceiveMessage(ChatAppServiceLibrary.DataContracts.Message message);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManagerService/GetOnlineClients")]
    void GetOnlineClients(ChatAppServiceLibrary.DataContracts.Client[] clients);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IChatManagerServiceChannel : IChatManagerService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ChatManagerServiceClient : System.ServiceModel.DuplexClientBase<IChatManagerService>, IChatManagerService
{
    
    public ChatManagerServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
            base(callbackInstance)
    {
    }
    
    public ChatManagerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
            base(callbackInstance, endpointConfigurationName)
    {
    }
    
    public ChatManagerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
            base(callbackInstance, endpointConfigurationName, remoteAddress)
    {
    }
    
    public ChatManagerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(callbackInstance, endpointConfigurationName, remoteAddress)
    {
    }
    
    public ChatManagerServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(callbackInstance, binding, remoteAddress)
    {
    }
    
    public bool Login(ChatAppServiceLibrary.DataContracts.Client client)
    {
        return base.Channel.Login(client);
    }
    
    public System.Threading.Tasks.Task<bool> LoginAsync(ChatAppServiceLibrary.DataContracts.Client client)
    {
        return base.Channel.LoginAsync(client);
    }
    
    public void SendMessage(ChatAppServiceLibrary.DataContracts.Message message)
    {
        base.Channel.SendMessage(message);
    }
    
    public System.Threading.Tasks.Task SendMessageAsync(ChatAppServiceLibrary.DataContracts.Message message)
    {
        return base.Channel.SendMessageAsync(message);
    }
    
    public void Logout(string userName)
    {
        base.Channel.Logout(userName);
    }
    
    public System.Threading.Tasks.Task LogoutAsync(string userName)
    {
        return base.Channel.LogoutAsync(userName);
    }
    
    public bool IsLoggedIn(string userName)
    {
        return base.Channel.IsLoggedIn(userName);
    }
    
    public System.Threading.Tasks.Task<bool> IsLoggedInAsync(string userName)
    {
        return base.Channel.IsLoggedInAsync(userName);
    }
}
